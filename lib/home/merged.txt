Date: 2023-12-13 11:18:03

Root File Path: d:\INTERNSHIP\RIG group\task1\git org\m_soko - swagnik\lib\home
Directory Tree:
- home/
    - bottom_navigation_bar.dart
    - home_screen.dart
    - logout.dart
    - products/
        - products_bloc.dart
        - products_event.dart
        - products_state.dart
        - screens/
            - products_page.dart
            - selected_categories_page.dart
        - widgets/
            - filter_items.dart
            - products_bottom_navigation_bar.dart
            - products_categories.dart
    - properties/
        - properties_bottom_navigation_bar.dart
        - properties_screen.dart
    - services/
        - services_bottom_navigation_bar.dart
        - services_screen.dart


--- ./bottom_navigation_bar.dart ---
import 'package:flutter/material.dart';

class CustomBottomNavigationBar extends StatelessWidget {
  final int currentIndex;
  final void Function(int) onTap;

  const CustomBottomNavigationBar({
    Key? key,
    required this.currentIndex,
    required this.onTap,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return BottomNavigationBar(
      fixedColor: Colors.blue[700],
      currentIndex: currentIndex,
      onTap: onTap,
      items: [
        BottomNavigationBarItem(
          icon: Icon(Icons.person),
          label: 'Profile',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.message),
          label: 'Messages',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.home),
          label: 'Home',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.payment),
          label: 'Payment',
        ),
        BottomNavigationBarItem(
          icon: Icon(Icons.menu),
          label: 'Menu',
        ),
      ],
    );
  }
}


--- ./home_screen.dart ---
import 'package:flutter/material.dart';
import 'package:m_soko/authentication/auth_services/auth_service.dart';
import 'package:m_soko/common/colors.dart';
import 'package:m_soko/home/logout.dart';
import 'package:m_soko/home/products/widgets/products_bottom_navigation_bar.dart';
import 'package:m_soko/home/products/screens/products_page.dart';
import 'package:m_soko/home/properties/properties_bottom_navigation_bar.dart';
import 'package:m_soko/home/properties/properties_screen.dart';
import 'package:m_soko/home/services/services_bottom_navigation_bar.dart';
import 'package:m_soko/home/services/services_screen.dart';

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  String get userId => AuthService.firebase().currentUser!.id;
  String get userName => AuthService.firebase().currentUser!.name;

  int _currentIndex = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Column(
          children: [
            PreferredSize(
                preferredSize: Size.fromHeight(80.0),
                child: Container(
                  color: _getTopBarColor(_currentIndex),
                  padding: EdgeInsets.symmetric(horizontal: 16.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      _buildTopBarButton("Products", 0),
                      _buildTopBarButton("Properties", 1),
                      _buildTopBarButton("Services", 2),
                      _buildTopBarButton("out", 3),
                    ],
                  ),
                )),
            Expanded(
              child: _buildBody(),
            ),
          ],
        ),
      ),
      bottomNavigationBar: _buildBottomNavigationBar(),
    );
  }

  Color _getTopBarColor(int index) {
    switch (index) {
      case 0:
        return ColorConstants.blue700;
      case 1:
        return ColorConstants.green800;
      case 2:
        return ColorConstants.orange500;
      default:
        return ColorConstants.blue700;
    }
  }

  Widget _buildTopBarButton(String title, int index) {
    return GestureDetector(
      onTap: () {
        setState(() {
          _currentIndex = index;
        });
      },
      child: Container(
        padding: EdgeInsets.symmetric(vertical: 12.0),
        decoration: BoxDecoration(
          border: Border(
            bottom: BorderSide(
              color: _currentIndex == index
                  ? ColorConstants.yellow400
                  : Colors.transparent,
              width: 6.0,
            ),
          ),
        ),
        child: Text(
          title,
          style: TextStyle(
            color: Colors.white,
            fontSize: 16.0,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }

  Widget _buildBody() {
    switch (_currentIndex) {
      case 0:
        return Theme(
          data: ThemeData(
            primaryColor: ColorConstants.blue700,
            hintColor: ColorConstants.yellow500,
          ),
          child: ProductsScreen(),
        );
      case 1:
        return Theme(
          data: ThemeData(
            primaryColor: ColorConstants.green700,
            hintColor: ColorConstants.yellow500,
          ),
          child: PropertiesScreen(),
        );
      case 2:
        return Theme(
          data: ThemeData(
            primaryColor:
                ColorConstants.orange700, // Change to your desired color
            hintColor: ColorConstants.yellow500,
          ),
          child: ServicesScreen(),
        );
      case 3:
        return LogoutScreen();
      default:
        return Container();
    }
  }

  Widget _buildBottomNavigationBar() {
    switch (_currentIndex) {
      case 0:
        return ProductsBottomNavigationBar();
      case 1:
        return PropertiesBottomNavigationBar();
      case 2:
        return ServicesBottomNavigationBar();
      default:
        // return Container();
        return ProductsBottomNavigationBar();
    }
  }
}


--- ./logout.dart ---
// ignore_for_file: unused_local_variable

import 'dart:math';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:m_soko/authentication/auth_services/bloc/auth_bloc.dart';
import 'package:m_soko/authentication/auth_services/bloc/auth_event.dart';

class LogoutScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Logout'),
      ),
      body: StreamBuilder(
        stream:
            FirebaseFirestore.instance.collection('product_items').snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return CircularProgressIndicator();
          }

          if (snapshot.hasError) {
            return Text('Error: ${snapshot.error}');
          }

          var documents = snapshot.data?.docs;

          return Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Image(
              //   image: NetworkImage(
              //       'https://firebasestorage.googleapis.com/v0/b/msoko-seller.appspot.com/o/ad_banners%2Fprd_ad_1.png?alt=media&token=0dda43dd-29ed-4f71-a4c2-88804f5c463f'),
              // ),
              ElevatedButton(
                onPressed: () {
                  // Call a function to add categories
                  // addCategories();
                  addProducts();
                },
                child: Text('Add Categories'),
              ),
              TextButton(
                onPressed: () {
                  context.read<AuthBloc>().add(
                        const AuthEventLogOut(),
                      );
                },
                child: Text('Logout'),
              ),
              // for (var document in documents!)
              //   CategoryWidget(data: document.data() as Map<String, dynamic>),
              // for (var document in documents!)
              //   ShowProducts(data: document.data() as Map<String, dynamic>),
            ],
          );
        },
      ),
    );
  }
}

Future<void> addCategories() async {
  CollectionReference categories =
      FirebaseFirestore.instance.collection('advertisement');

  await categories.doc('prop_ad_0').set({
    'brandName': 'House',
    'bannerImage':
        'https://firebasestorage.googleapis.com/v0/b/msoko-seller.appspot.com/o/ad_banners%2Fprop_ad_1.png?alt=media&token=c39ab5c0-26a9-4ffa-96c9-447f188c39c6',
  });
  // await categories.doc('prd_ad_02').set({
  //   'brandName': 'Maha Electronics',
  //   'bannerImage':
  //       'https://firebasestorage.googleapis.com/v0/b/msoko-seller.appspot.com/o/ad_banners%2Fprd_ad_1.png?alt=media&token=0dda43dd-29ed-4f71-a4c2-88804f5c463f',
  // });
  // await categories.doc('prd_ad_03').set({
  //   'brandName': 'Maha Electronics',
  //   'bannerImage':
  //       'https://firebasestorage.googleapis.com/v0/b/msoko-seller.appspot.com/o/ad_banners%2Fprd_ad_1.png?alt=media&token=0dda43dd-29ed-4f71-a4c2-88804f5c463f',
  // });

//   // Reference to the Firestore collection
//   CollectionReference categories =
//       FirebaseFirestore.instance.collection('product_categories');

// // Assuming 'categories' is a reference to your Firebase Firestore collection

// // Add category 1: Electronics
//   await categories.doc('prd_cat_01').set({
//     'categoryName': 'Electronics',
//     'categoryImage': 'url_to_image_for_electronics',
//   });

// // Add category 2: Mobiles
//   await categories.doc('prd_cat_02').set({
//     'categoryName': 'Mobiles',
//     'categoryImage': 'url_to_image_for_mobiles',
//   });

// // Add category 3: Fashion
//   await categories.doc('prd_cat_03').set({
//     'categoryName': 'Fashion',
//     'categoryImage': 'url_to_image_for_fashion',
//   });

// // Add category 4: Personal Care
//   await categories.doc('prd_cat_04').set({
//     'categoryName': 'Personal Care',
//     'categoryImage': 'url_to_image_for_personal_care',
//   });

// // Add category 5: Footwear
//   await categories.doc('prd_cat_05').set({
//     'categoryName': 'Footwear',
//     'categoryImage': 'url_to_image_for_footwear',
//   });

// // Add category 6: Baby Products
//   await categories.doc('prd_cat_06').set({
//     'categoryName': 'Baby Products',
//     'categoryImage': 'url_to_image_for_baby_products',
//   });

// // Add category 7: Home
//   await categories.doc('prd_cat_07').set({
//     'categoryName': 'Home',
//     'categoryImage': 'url_to_image_for_home',
//   });

// // Add category 8: Eyewear
//   await categories.doc('prd_cat_08').set({
//     'categoryName': 'Eyewear',
//     'categoryImage': 'url_to_image_for_eyewear',
//   });

// // Add category 9: Furniture
//   await categories.doc('prd_cat_09').set({
//     'categoryName': 'Furniture',
//     'categoryImage': 'url_to_image_for_furniture',
//   });

// // Add category 10: Jewellery
//   await categories.doc('prd_cat_10').set({
//     'categoryName': 'Jewellery',
//     'categoryImage': 'url_to_image_for_jewellery',
//   });

// // Add category 11: Luggage Bags
//   await categories.doc('prd_cat_11').set({
//     'categoryName': 'Luggage Bags',
//     'categoryImage': 'url_to_image_for_luggage_bags',
//   });

// // Add category 12: Packaging
//   await categories.doc('prd_cat_12').set({
//     'categoryName': 'Packaging',
//     'categoryImage': 'url_to_image_for_packaging',
//   });

// // Add category 13: Tools
//   await categories.doc('prd_cat_13').set({
//     'categoryName': 'Tools',
//     'categoryImage': 'url_to_image_for_tools',
//   });

// // Add category 14: Grocery
//   await categories.doc('prd_cat_14').set({
//     'categoryName': 'Grocery',
//     'categoryImage': 'url_to_image_for_grocery',
//   });

// // Add category 15: Sport
//   await categories.doc('prd_cat_15').set({
//     'categoryName': 'Sport',
//     'categoryImage': 'url_to_image_for_sport',
//   });

// // Add category 16: Medicine
//   await categories.doc('prd_cat_16').set({
//     'categoryName': 'Medicine',
//     'categoryImage': 'url_to_image_for_medicine',
//   });
}

class CategoryWidget extends StatelessWidget {
  final Map<String, dynamic> data;

  const CategoryWidget({required this.data});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('categoryName: ${data['brandName']}'),
        Image(image: NetworkImage(data['bannerImage'])),
        // Text('categoryImage: ${data['categoryImage']}'),
        SizedBox(height: 16),
      ],
    );
  }
}

Future<void> addProducts() async {
  CollectionReference categories =
      FirebaseFirestore.instance.collection('product_items');

  // Function to generate a random 3-digit number
  String generateRandom3DigitNumber() {
    Random random = Random();
    return random.nextInt(900).toString() + 100.toString();
  }

  // List of categories
  List<String> categoryList = [
    'Electronics',
    'Mobiles',
    'Fashion',
    'Personal Care',
    'Footwear',
    'Baby Products',
    'Home',
    'Eyewear',
    'Furniture',
    'Jewellery',
    'Luggage Bags',
    'Packaging',
    'Tools',
    'Grocery',
    'Sport',
    'Medicine',
  ];

  // Function to get a random category
  String getRandomCategory() {
    Random random = Random();
    return categoryList[random.nextInt(categoryList.length)];
  }

  // Create 30 logical product entries
  for (int i = 0; i < 100; i++) {
    String randomUID = DateTime.now().millisecondsSinceEpoch.toString() +
        generateRandom3DigitNumber();

    String category = getRandomCategory();
    String productName = '';
    productName = '$category Product $i';

    await categories.doc(randomUID).set({
      'prdItemCategory': category,
      'prdItemDesc': 'Description for $productName',
      'prdItemImage1': '',
      'prdItemImage2': '',
      'prdItemImage3': '',
      'prdItemName': productName,
      'prdItemPrice': (i + 1) * 100,
    });
  }

  print('100 products added successfully!');
}

class ShowProducts extends StatelessWidget {
  final Map<String, dynamic> data;

  const ShowProducts({required this.data});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('Category Name: ${data['prdItemCategory']}'),
        Image(image: NetworkImage(data['prdItemImage1'])),
        Text('Product Description: ${data['prdItemDesc']}'),
        Text('Product Name: ${data['prdItemName']}'),
        Text('Product Price: ${data['prdItemPrice']}'),
        // Add more Text widgets for other fields as needed
      ],
    );
  }
}


--- products/products_bloc.dart ---
import 'package:cloud_firestore/cloud_firestore.dart';

Future<List<Map<String, dynamic>>> fetchAdvertisementsFromFirestore() async {
  var querySnapshot =
      await FirebaseFirestore.instance.collection('advertisement').get();

  // Filter documents with 'adType' equal to 'product'
  var filteredDocs = querySnapshot.docs
      .where((doc) => doc['adType'] != null && doc['adType'] == 'product');

  return filteredDocs.map((doc) {
    return {
      'brandName': doc['brandName'],
      'bannerImage': doc['bannerImage'],
    };
  }).toList();
}

Future<List<Map<String, dynamic>>> fetchCategoriesFromFirestore() async {
  var querySnapshot =
      await FirebaseFirestore.instance.collection('product_categories').get();

  return querySnapshot.docs.map((doc) {
    return {
      'categoryName': doc['categoryName'],
      'categoryImage': doc['categoryImage'],
    };
  }).toList();
}

Future<List<Map<String, dynamic>>> futureCheckSelectedCategoryProducts(
    String category) async {
  var querySnapshot =
      await FirebaseFirestore.instance.collection('product_items').get();

  var filteredDocs =
      querySnapshot.docs.where((doc) => doc['prdItemCategory'] == category);

  return filteredDocs.map((doc) {
    return {
      'prdItemDesc': doc['prdItemDesc'],
      'prdItemImage1': doc['prdItemImage1'],
      'prdItemImage2': doc['prdItemImage2'],
      'prdItemImage3': doc['prdItemImage3'],
      'prdItemName': doc['prdItemName'],
      'prdItemPrice': doc['prdItemPrice'],
    };
  }).toList();
}


--- products/products_event.dart ---
// Your Dart 

--- products/products_state.dart ---
// Your Dart code goes here

--- products\screens/products_page.dart ---
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:m_soko/common/colors.dart';
import 'package:m_soko/home/products/products_bloc.dart';
import 'package:m_soko/home/products/widgets/filter_items.dart';
import 'package:m_soko/home/products/widgets/products_categories.dart';

class ProductsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: SingleChildScrollView(
          padding: EdgeInsets.fromLTRB(8, 15, 8, 10),
          child: Column(
            children: [
              // search box
              _searchBox(),
              const SizedBox(height: 15),
              // categories
              _mainCategories(),
              const SizedBox(height: 15),
              // Advertisement
              _advertisement(),
              const SizedBox(height: 8),
              // Filters
              _filters(context),
              // const SizedBox(height: 15),
              // // 2nd Category
              // _secondCategory(),
              // const SizedBox(height: 15),
              // // top rated
              // _topRated(),
              // const SizedBox(height: 15),
            ],
          ),
        ),
      ),
    );
  }

  Widget _searchBox() {
    return Container(
      height: 60,
      decoration: BoxDecoration(
        color: ColorConstants.blue50,
        border: Border.all(color: ColorConstants.blue200),
      ),
      child: const Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Padding(
            padding: EdgeInsets.all(8.0),
            child: Icon(CupertinoIcons.search, color: ColorConstants.blue700),
          ),
          Expanded(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 8.0),
              child: Text(
                "Search for products",
                style: TextStyle(
                  fontSize: 19,
                  color: ColorConstants.blue700,
                ),
              ),
            ),
          ),
          Padding(
            padding: EdgeInsets.all(8.0),
            child: Icon(
              Icons.camera_alt_outlined,
              color: ColorConstants.blue700,
            ),
          ),
          SizedBox(
            width: 15,
          ),
          Padding(
            padding: EdgeInsets.all(8.0),
            child: Icon(CupertinoIcons.mic, color: ColorConstants.blue700),
          ),
        ],
      ),
    );
  }

  Widget _mainCategories() {
    return FutureBuilder(
      future: fetchCategoriesFromFirestore(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return CircularProgressIndicator();
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else {
          var categories = snapshot.data as List<Map<String, dynamic>>;
          return SingleChildScrollView(
            scrollDirection: Axis.horizontal,
            child: Row(
              children: categories.map((category) {
                return ProductsMainCategoryWidget(
                  imagePath: category['categoryImage'],
                  categoryName: category['categoryName'],
                );
              }).toList(),
            ),
          );
        }
      },
    );
  }

  Widget _advertisement() {
    return FutureBuilder(
      future: fetchAdvertisementsFromFirestore(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return CircularProgressIndicator();
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else {
          var advertisements = snapshot.data as List<Map<String, dynamic>>;
          return Container(
            height: 170,
            child: PageView.builder(
              itemCount: advertisements.length,
              itemBuilder: (context, index) {
                return ClipRRect(
                  borderRadius: BorderRadius.circular(8),
                  child: Container(
                    height: 150,
                    child: Image.network(
                      advertisements[index]['bannerImage'],
                      fit: BoxFit.cover,
                    ),
                  ),
                );
              },
            ),
          );
        }
      },
    );
  }

  Widget _filters(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        FilterItem(
          label: 'Recently Viewed',
          onPressedAction: () {
            Fluttertoast.showToast(msg: 'Recently Viewed');
          },
          isSelected: true,
        ),
        FilterItem(
            label: 'Categories',
            onPressedAction: () {
              Fluttertoast.showToast(msg: 'Categories');
            }),
        FilterItem(
            label: 'Top Offers',
            onPressedAction: () {
              Fluttertoast.showToast(msg: 'Top Offers');
            }),
        FilterItem(
            label: 'New',
            onPressedAction: () {
              Fluttertoast.showToast(msg: 'New');
            }),
      ],
    );
  }
}

Widget _secondCategory() {
  return Container();
}

Widget _topRated() {
  return Container();
}


--- products\screens/selected_categories_page.dart ---
import 'package:flutter/material.dart';
import 'package:m_soko/home/products/products_bloc.dart';

class SelectedCategoryPage extends StatelessWidget {
  final String title;

  SelectedCategoryPage({
    required this.title,
  });

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).primaryColor,
          leading: IconButton(
            icon: Icon(Icons.arrow_back),
            color: Colors.white,
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
          title: Text(
            title,
            style: TextStyle(color: Colors.white),
          ),
        ),
        body: FutureBuilder<List<Map<String, dynamic>>>(
          future: futureCheckSelectedCategoryProducts(title),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return CircularProgressIndicator();
            } else if (snapshot.data == null || snapshot.data!.isEmpty) {
              return Center(child: Text('No data found'));
            } else if (snapshot.hasError) {
              return Text('Error: ${snapshot.error}');
            } else {
              List<Map<String, dynamic>> products = snapshot.data!;
              return ListView.builder(
                itemCount: products.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(products[index]['prdItemName']),
                    subtitle: Text(products[index]['prdItemPrice'].toString()),
                  );
                },
              );
            }
          },
        ),
      ),
    );
  }
}


--- products\widgets/filter_items.dart ---
import 'package:flutter/material.dart';

class FilterItem extends StatelessWidget {
  final String label;
  final Function onPressedAction;
  final bool isSelected;

  FilterItem({
    required this.label,
    required this.onPressedAction,
    this.isSelected = false,
  });

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        onPressedAction();
      },
      child: Container(
        height: 42,
        alignment: Alignment.center,
        padding: EdgeInsets.symmetric(vertical: 5, horizontal: 8),
        decoration: BoxDecoration(
          color: isSelected ? Colors.blue : Colors.transparent,
          borderRadius: BorderRadius.circular(8),
          border: Border.all(
            color: isSelected ? Colors.blue : Colors.black54,
            width: 1.0,
          ),
        ),
        child: Text(
          label,
          style: TextStyle(
            color: isSelected ? Colors.white : Colors.black54,
            fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
          ),
        ),
      ),
    );
  }
}


--- products\widgets/products_bottom_navigation_bar.dart ---
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:m_soko/common/colors.dart';

class ProductsBottomNavigationBar extends StatefulWidget {
  const ProductsBottomNavigationBar({Key? key}) : super(key: key);

  @override
  _ProductsBottomNavigationBarState createState() =>
      _ProductsBottomNavigationBarState();
}

class _ProductsBottomNavigationBarState
    extends State<ProductsBottomNavigationBar> {
  int _currentIndex = 2;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: const BoxDecoration(
        color: Colors.white,
      ),
      child: Stack(
        children: [
          _buildCircleIndicator(),
          BottomNavigationBar(
            backgroundColor: Colors.transparent,
            selectedItemColor: Colors.white,
            unselectedItemColor: Colors.black,
            currentIndex: _currentIndex,
            type: BottomNavigationBarType.fixed,
            iconSize: 35.0,
            elevation: 0,
            items: const [
              BottomNavigationBarItem(
                icon: Icon(Icons.person_2_rounded),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(CupertinoIcons.text_bubble),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.home),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.payment),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.menu_rounded),
                label: '',
              ),
            ],
            onTap: (index) {
              setState(() {
                _currentIndex = index;
              });
              if (index == 0) {
                // Navigator.push(
                //   context,
                //   MaterialPageRoute(builder: (context) => const ProfilePage()),
                // );
              }
            },
          ),
          _buildSelectedLabelIndicator(),
        ],
      ),
    );
  }

  Widget _buildSelectedLabelIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 8.5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 2.8;

    return Positioned(
      bottom: 2,
      left: indicatorPosition,
      child: Container(
        width: itemWidth,
        height: 6.0,
        color: ColorConstants.yellow400,
      ),
    );
  }

  Widget _buildCircleIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 5.5;

    return Positioned(
      bottom: 20,
      left: indicatorPosition,
      child: Container(
        width: 50.0,
        height: 50.0,
        padding: EdgeInsets.all(0),
        decoration: BoxDecoration(
          shape: BoxShape.circle,
          color: ColorConstants.blue700,
        ),
      ),
    );
  }
}


--- products\widgets/products_categories.dart ---
import 'package:flutter/material.dart';
import 'package:m_soko/common/colors.dart';
import 'package:m_soko/home/products/screens/selected_categories_page.dart';

class ProductsMainCategoryWidget extends StatelessWidget {
  final String imagePath;
  final String categoryName;

  const ProductsMainCategoryWidget({
    Key? key,
    required this.imagePath,
    required this.categoryName,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        Navigator.of(context).push(
          MaterialPageRoute(
            builder: (context) => SelectedCategoryPage(
              title: categoryName,
            ),
          ),
        );
      },
      child: Padding(
        padding: EdgeInsets.symmetric(horizontal: 5),
        child: Container(
          width: 76,
          height: 82,
          decoration: BoxDecoration(
            color: ColorConstants.yellow50,
            borderRadius: BorderRadius.circular(10),
          ),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Image(
                image: NetworkImage(imagePath),
                width: 50,
                height: 50,
              ),
              SizedBox(height: 8),
              Text(
                categoryName,
                textAlign: TextAlign.center,
                style: TextStyle(fontSize: 11),
              ),
            ],
          ),
        ),
      ),
    );
  }
}


--- properties/properties_bottom_navigation_bar.dart ---
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:m_soko/common/colors.dart';

class PropertiesBottomNavigationBar extends StatefulWidget {
  const PropertiesBottomNavigationBar({Key? key}) : super(key: key);

  @override
  _PropertiesBottomNavigationBarState createState() =>
      _PropertiesBottomNavigationBarState();
}

class _PropertiesBottomNavigationBarState
    extends State<PropertiesBottomNavigationBar> {
  int _currentIndex = 2;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: const BoxDecoration(
        color: Colors.white,
      ),
      child: Stack(
        children: [
          _buildCircleIndicator(),
          BottomNavigationBar(
            backgroundColor: Colors.transparent,
            selectedItemColor: Colors.white,
            unselectedItemColor: Colors.black,
            currentIndex: _currentIndex,
            type: BottomNavigationBarType.fixed,
            iconSize: 35.0,
            elevation: 0,
            items: const [
              BottomNavigationBarItem(
                icon: Icon(Icons.person_2_rounded),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(CupertinoIcons.text_bubble),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.home),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.payment),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.menu_rounded),
                label: '',
              ),
            ],
            onTap: (index) {
              setState(() {
                _currentIndex = index;
              });
              // Handle navigation to different screens based on the selected index
              // You can use Navigator or any navigation logic here
            },
          ),
          _buildSelectedLabelIndicator(),
        ],
      ),
    );
  }

  Widget _buildSelectedLabelIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 8.5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 2.8;

    return Positioned(
      bottom: 2,
      left: indicatorPosition,
      child: Container(
        width: itemWidth,
        height: 6.0,
        color: ColorConstants.yellow400,
      ),
    );
  }

  Widget _buildCircleIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 5.5;

    return Positioned(
      bottom: 20,
      left: indicatorPosition,
      child: Container(
        width: 50.0,
        height: 50.0,
        padding: EdgeInsets.all(0),
        decoration: BoxDecoration(
          shape: BoxShape.circle,
          color: ColorConstants.green800,
        ),
      ),
    );
  }
}


--- properties/properties_screen.dart ---
import 'package:flutter/material.dart';

class PropertiesScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Properties'),
      ),
      body: Center(
        child: Text(
          'PROPERTIES',
          style: TextStyle(
            fontSize: 24.0,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }
}


--- services/services_bottom_navigation_bar.dart ---
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:m_soko/common/colors.dart';

class ServicesBottomNavigationBar extends StatefulWidget {
  const ServicesBottomNavigationBar({Key? key}) : super(key: key);

  @override
  _ServicesBottomNavigationBarState createState() =>
      _ServicesBottomNavigationBarState();
}

class _ServicesBottomNavigationBarState
    extends State<ServicesBottomNavigationBar> {
  int _currentIndex = 2;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: const BoxDecoration(
        color: Colors.white,
      ),
      child: Stack(
        children: [
          _buildCircleIndicator(),
          BottomNavigationBar(
            backgroundColor: Colors.transparent,
            selectedItemColor: Colors.white,
            unselectedItemColor: Colors.black,
            currentIndex: _currentIndex,
            type: BottomNavigationBarType.fixed,
            iconSize: 35.0,
            elevation: 0,
            items: const [
              BottomNavigationBarItem(
                icon: Icon(Icons.person_2_rounded),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(CupertinoIcons.text_bubble),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.home),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.payment),
                label: '',
              ),
              BottomNavigationBarItem(
                icon: Icon(Icons.menu_rounded),
                label: '',
              ),
            ],
            onTap: (index) {
              setState(() {
                _currentIndex = index;
              });
              // Handle navigation to different screens based on the selected index
              // You can use Navigator or any navigation logic here
            },
          ),
          _buildSelectedLabelIndicator(),
        ],
      ),
    );
  }

  Widget _buildSelectedLabelIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 8.5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 2.8;

    return Positioned(
      bottom: 2,
      left: indicatorPosition,
      child: Container(
        width: itemWidth,
        height: 6.0,
        color: ColorConstants.yellow400,
      ),
    );
  }

  Widget _buildCircleIndicator() {
    double itemWidth = MediaQuery.of(context).size.width / 5;
    double indicatorPosition =
        _currentIndex * MediaQuery.of(context).size.width / 5 + itemWidth / 5.5;

    return Positioned(
      bottom: 20,
      left: indicatorPosition,
      child: Container(
        width: 50.0,
        height: 50.0,
        padding: EdgeInsets.all(0),
        decoration: BoxDecoration(
          shape: BoxShape.circle,
          color: ColorConstants.orange500,
        ),
      ),
    );
  }
}


--- services/services_screen.dart ---
import 'package:flutter/material.dart';

class ServicesScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Services'),
      ),
      body: Center(
        child: Text(
          'SERVICES',
          style: TextStyle(
            fontSize: 24.0,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }
}


